#BlueJ class context
comment0.target=GUI
comment0.text=\r\n\ Main\ class\ to\ excecute\ the\ abstract\ methods\ from\ the\ ToDo\ class\ which\ implements\ the\ List\ interface.\r\n
comment1.params=
comment1.target=void\ main()
comment10.params=
comment10.target=java.lang.String\ outputList()
comment10.text=\r\n\ Method\ used\ to\ create\ a\ string\ buffer\ with\ all\ of\ the\ objects\ from\ the\ array.\r\n\ the\ string\ buffer\ is\ returned\ and\ also\ printed\ out\r\n
comment11.params=
comment11.target=void\ printTasks()
comment11.text=\r\n\ This\ method\ prints\ out\ all\ of\ the\ tasks\ that\ are\ in\ the\ array.\r\n\ The\ tasks\ are\ printed\ in\ a\ easy\ to\ read\ format\ line\ by\ line.\r\n
comment12.params=index
comment12.target=java.lang.Object\ remove(int)
comment12.text=\r\n\ checks\ index\ method.\r\n\ This\ method\ removes\ an\ object\ that\ has\ the\ same\ index\ as\ the\ parameter\ of\ the\ method.\r\n\ The\ size\ of\ the\ list\ is\ then\ reduced\ by\ 1.\r\n
comment2.params=initialCapacity
comment2.target=GUI(int)
comment2.text=\r\n\ Constructor\ for\ the\ GUI.\r\n\ Note\:\ GUI\ is\ named\ as\ the\ class\ where\ changes\ can\ be\ made\ to\ the\ data.\r\n\ Constructor\ creates\ the\ Array\ with\ a\ specified\ initial\ capacity.\r\n
comment3.params=
comment3.target=GUI()
comment3.text=\r\n\ simple\ constructer\ specifying\ the\ capcity\ as\ 10.\r\n
comment4.params=index
comment4.target=void\ checkIndex(int)
comment4.text=\r\n\ Checks\ the\ index\ input\ to\ make\ sure\ the\ array\ holds\ an\ index\ of\ that\ number.\r\n
comment5.params=index
comment5.target=java.lang.Object\ get(int)
comment5.text=\r\n\ uses\ checkIndex()\ method.\r\n\ returns\ the\ index\ input.\r\n
comment6.params=theElement
comment6.target=int\ indexOf(java.lang.Object)
comment6.text=\r\n\ Returns\ the\ index\ of\ the\ object\ input.\r\n
comment7.params=index\ theElement
comment7.target=void\ add(int,\ java.lang.Object)
comment7.text=\r\n\ uses\ checkIndex()\ method.\r\n\ Adds\ a\ new\ object\ to\ the\ array\ with\ a\ list\ position\ in\ the\ form\ of\ an\ index\ number.\r\n\ the\ size\ of\ the\ list\ is\ then\ increased\ by\ 1.\r\n
comment8.params=filePath
comment8.target=void\ readItemData(java.lang.String)
comment8.text=\r\n\ Read\ method\ that\ scans\ a\ file\ to\ fill\ the\ Array\ with\ some\ tasks\ for\ the\ ToDoList\r\n\ Converts\ the\ data\ provided\ into\ task\ names\ and\ Due\ Dates\ that\ will\ populate\ the\ Array\r\n
comment9.params=index
comment9.target=void\ completeTask(int)
comment9.text=\r\n\ Checks\ the\ index\ input\ is\ correct\r\n\ creates\ a\ StringBuffer\ and\ fills\ with\ objects\ in\ the\ array\ in\ the\ form\ of\ strings\r\n\ if\ and\ objects\ index\ matches\ the\ paremeter\ of\ the\ method,\ the\ stringbuffer\ will\ change\ the\ complete\ value\ to\ "true"\ and\ print\ out\ the\ line\r\n\ if\ the\ objects\ index\ does\ not\ match\ the\ paremeter\ of\ the\ method,\ the\ stringbuffer\ will\ print\ out\ the\ line\ without\ changing\ any\ values\r\n\ the\ object\ that\ has\ match\ the\ method\ parameter\ and\ has\ had\ a\ value\ changed\ will\ then\ be\ removed\ from\ the\ array\ as\ the\ task\ has\ been\ comepleted\r\n\ the\ rest\ of\ the\ objects\ in\ the\ array\ will\ remain\ as\ they\ are\ yet\ to\ be\ marked\ as\ completed\r\n
numComments=13
